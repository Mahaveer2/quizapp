generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  name          String?
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userAuthToken String   @unique @default("")
}

model Test {
  id        Int        @id @default(autoincrement())
  name      String
  questions Question[]
  scores    Score[]
  shareLink String     @unique
}

model Question {
  id            Int    @id @default(autoincrement())
  questionText  String
  correctAnswer String
  test          Test   @relation(fields: [testId], references: [id], onDelete: Cascade)
  testId        Int
}

model Student {
  id            Int     @id @default(autoincrement())
  email         String  @unique
  firstName     String
  lastName      String
  scores        Score[]
  Chat          Chat?   @relation(fields: [chatId], references: [id])
  chatId        Int?
  password      String
  credits       Int     @default(1)
  payments PaymentSessions[]
  userAuthToken String  @unique @default("")
}

model PaymentSessions{
  id Int @id @default(autoincrement())
  paymentId String @unique
  student Student @relation(fields: [studentId],references: [id])
  studentId Int
  createdAt DateTime @default(now())
}

model Score {
  id        Int     @id @default(autoincrement())
  score     Json
  student   Student @relation(fields: [studentId], references: [id])
  studentId Int
  test      Test    @relation(fields: [testId], references: [id])
  testId    Int
}

model Chat {
  id        Int       @id @default(autoincrement())
  student   Student[]
  studentId Int
  prompt    String
  returnMsg String
}
